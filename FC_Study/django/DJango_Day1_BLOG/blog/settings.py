"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
"""
이 파일에서 프로젝트에 관한 전반적인 설정을 한다.
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 기본 디렉토리를 설정한다. 'os.path.dirname'를 두 번 사용함으로써 'project-blog'에 도달했다.

# Templates directory.
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
# BASE_DIR과 'templates'를 합쳐서 경로를 만들었다. 이 경로는 밑의 'TEMPLATES' 리스트의 'DIRS'에 넣어준다.

STATIC_DIR = os.path.join(BASE_DIR, 'static')
# CSS, JAVASCRIPT 등 정적인 파일을 담을 경로를 설정한다. 프로젝트에 'static' 폴더를 만들고
# 그 안에 집어넣었다. 'STATIC_DIR' 은 밑에서 사용한다.

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&%6)snfb$n!@bm8wmfc)t+l!$292t4u%0^tjkp4694e*_==5e5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # post 앱 설치했음을 알린다. 이렇게 'post'만 넣어도 되고, apps.py의 'post.PostConfig' 넣어도 된다.
    'post',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            TEMPLATES_DIR, # 템플릿과 관련한 설정. 여기에 모든 템플릿이 속할 경로를 넣었다.
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # 기본은 sqlite3이며 수정가능하다.
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

# 정해진 값이다. 'STATICFILES_DIRS' 폴더 안에 들어가는 값들은 정적 파일들이 들어가는 경로로 인식된다.
STATICFILES_DIRS = [
    STATIC_DIR,
]

# 이 값이 '/static/'으로 되어 있음으로 인해 프로젝트 내 경로가 'static'이 가능하다. 물론 수정할 수 있다.
STATIC_URL = '/static/'
